{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/mehdi/Projects/jahaninfo/next-boilerplate-ts/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { getAll } from './actions';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport SelectIndexState from './selectors';\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"posts\", this.props.IndexState.posts);\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getAll());\n  }\n\n  mapPosts() {\n    return this.props.IndexState.posts.map(post => __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, post.title), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, post.body)));\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.mapPosts());\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  IndexState: SelectIndexState()\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withConnect)(Index);","map":{"version":3,"sources":["/home/mehdi/Projects/jahaninfo/next-boilerplate-ts/pages/index.tsx"],"names":["React","getAll","connect","compose","createStructuredSelector","SelectIndexState","Index","Component","constructor","props","IndexState","posts","componentDidMount","dispatch","mapPosts","map","post","title","body","render","mapStateToProps","mapDispatchToProps","withConnect"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,gBAAP,MAA6B,aAA7B;;AAMA,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAiD;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAqB;AAC9B,UAAMA,KAAN;;AAD8B,mCAGxB,KAAKA,KAAL,CAAWC,UAAX,CAAsBC,KAHE;AAE/B;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,KAAL,CAAWI,QAAX,CAAoBZ,MAAM,EAA1B;AACD;;AACOa,EAAAA,QAAR,GAAmB;AACjB,WAAO,KAAKL,KAAL,CAAWC,UAAX,CAAsBC,KAAtB,CAA4BI,GAA5B,CAAiCC,IAAD,IACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CAFF,CADK,CAAP;AAMD;;AACMC,EAAAA,MAAP,GAA6B;AAC3B,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,QAAL,EADH,CADF;AAKD;;AAtB8C;;AA2BjD,MAAMM,eAAe,GAAGhB,wBAAwB,CAAW;AACzDM,EAAAA,UAAU,EAAEL,gBAAgB;AAD6B,CAAX,CAAhD;;AAIA,SAASgB,kBAAT,CAA4BR,QAA5B,EAA2C;AACzC,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD;;AAED,MAAMS,WAAW,GAAGpB,OAAO,CACzBkB,eADyB,EAEzBC,kBAFyB,CAA3B;AAKA,eAAelB,OAAO,CAACmB,WAAD,CAAP,CAAqBhB,KAArB,CAAf","sourcesContent":["import React from 'react';\nimport { getAll } from './actions';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport SelectIndexState from './selectors';\n\ninterface IIndexProps {\n  dispatch: Function,\n  IndexState: any\n}\nclass Index extends React.Component<IIndexProps> {\n  constructor(props: IIndexProps) {\n    super(props);\n  }\n  posts = this.props.IndexState.posts;\n  componentDidMount() {\n    this.props.dispatch(getAll())\n  }\n  private mapPosts() {\n    return this.props.IndexState.posts.map((post: any) => (\n      <div>\n        <h2>{post.title}</h2>\n        <p>{post.body}</p>\n      </div>\n    ))\n  }\n  public render(): JSX.Element {\n    return (\n      <div>\n        {this.mapPosts()}\n      </div>\n    )\n  }\n}\n\n\n\nconst mapStateToProps = createStructuredSelector<any, any>({\n  IndexState: SelectIndexState()\n});\n\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    dispatch,\n  };\n}\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n);\n\nexport default compose(withConnect)(Index);\n\n"]},"metadata":{},"sourceType":"module"}