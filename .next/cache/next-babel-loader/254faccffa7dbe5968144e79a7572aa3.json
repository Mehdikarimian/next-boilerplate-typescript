{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getAll),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(indexSaga);\n\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios'; // import request from '../request';\n\nimport { getAllSuccess, getAllFaield } from './actions';\nimport { GET_ALL_POST } from './constants';\n\nfunction getAll() {\n  var data;\n  return _regeneratorRuntime.wrap(function getAll$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('getAll action');\n          _context.prev = 1;\n          _context.next = 4;\n          return call(axios.get, 'https://jsonplaceholder.typicode.com/posts');\n\n        case 4:\n          data = _context.sent;\n          _context.next = 7;\n          return put(getAllSuccess(data));\n\n        case 7:\n          _context.next = 13;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 13;\n          return put(getAllFaield(_context.t0));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 9]]);\n}\n\nexport default function indexSaga() {\n  return _regeneratorRuntime.wrap(function indexSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(GET_ALL_POST, getAll);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/home/mehdi/Projects/jahaninfo/next-boilerplate-ts/pages/saga.ts"],"names":["getAll","indexSaga","takeLatest","call","put","axios","getAllSuccess","getAllFaield","GET_ALL_POST","console","log","get","data"],"mappings":";;;;yBAOUA,M;;;yBAUeC,S;;AAjBzB,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,WAA5C;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,SAAUR,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACES,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AADF;AAAA;AAGiB,iBAAMP,IAAI,CAACE,KAAK,CAACM,GAAP,EAAY,4CAAZ,CAAV;;AAHjB;AAGUC,UAAAA,IAHV;AAAA;AAII,iBAAMR,GAAG,CAACE,aAAa,CAACM,IAAD,CAAd,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMI,iBAAMR,GAAG,CAACG,YAAY,aAAb,CAAT;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAe,SAAUN,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,UAAU,CAACM,YAAD,EAAeR,MAAf,CAAhB;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\n// import request from '../request';\n\nimport { getAllSuccess, getAllFaield } from './actions';\nimport { GET_ALL_POST } from './constants';\n\nfunction* getAll() {\n  console.log('getAll action')\n  try {\n    const data = yield call(axios.get, 'https://jsonplaceholder.typicode.com/posts');\n    yield put(getAllSuccess(data));\n  } catch (error) {\n    yield put(getAllFaield(error));\n  }\n}\n\nexport default function* indexSaga() {\n  yield takeLatest(GET_ALL_POST, getAll);\n}\n"]},"metadata":{},"sourceType":"module"}