{"ast":null,"code":"import produce from 'immer';\nimport { DEFAULT_ACTION, GET_ALL_POST, GET_ALL_POST_SUCCESS, GET_ALL_POST_FAIELD } from './constants';\nexport const initialState = {\n  start: false,\n  posts: []\n};\nexport const IndexReducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case GET_ALL_POST:\n      break;\n\n    case GET_ALL_POST_SUCCESS:\n      draft.posts = action.data.data;\n      break;\n\n    case GET_ALL_POST_FAIELD:\n      console.log(action.error);\n      break;\n\n    case DEFAULT_ACTION:\n      draft.start = true;\n      break;\n\n    default:\n      break;\n  }\n});\nexport default IndexReducer;","map":{"version":3,"sources":["/home/mehdi/Projects/jahaninfo/next-boilerplate-ts/pages/reducer.ts"],"names":["produce","DEFAULT_ACTION","GET_ALL_POST","GET_ALL_POST_SUCCESS","GET_ALL_POST_FAIELD","initialState","start","posts","IndexReducer","state","action","draft","type","data","console","log","error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,oBAAvC,EAA6DC,mBAA7D,QAAwF,aAAxF;AAIA,OAAO,MAAMC,YAAyB,GAAG;AACvCC,EAAAA,KAAK,EAAE,KADgC;AAEvCC,EAAAA,KAAK,EAAE;AAFgC,CAAlC;AAaP,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAC1BV,OAAO,CAACS,KAAD,EAAQE,KAAK,IAAI;AACtB,UAAQD,MAAM,CAACE,IAAf;AACE,SAAKV,YAAL;AACE;;AACF,SAAKC,oBAAL;AACEQ,MAAAA,KAAK,CAACJ,KAAN,GAAcG,MAAM,CAACG,IAAP,CAAYA,IAA1B;AACA;;AACF,SAAKT,mBAAL;AACEU,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,KAAnB;AACA;;AACF,SAAKf,cAAL;AACEU,MAAAA,KAAK,CAACL,KAAN,GAAc,IAAd;AACA;;AACF;AACE;AAbJ;AAeD,CAhBM,CADF;AAkBP,eAAeE,YAAf","sourcesContent":["import produce from 'immer';\nimport { DEFAULT_ACTION, GET_ALL_POST, GET_ALL_POST_SUCCESS, GET_ALL_POST_FAIELD } from './constants';\nimport { Action } from 'redux';\n\n\nexport const initialState: IIndexStore = {\n  start: false,\n  posts: [],\n};\nexport interface IIndexStore {\n  start: Boolean,\n  posts: Array<Object>,\n}\ntype IndexAction = Action & {\n  data: any,\n  error: any,\n}\n\nexport const IndexReducer = (state = initialState, action: IndexAction) =>\n  produce(state, draft => {\n    switch (action.type) {\n      case GET_ALL_POST:\n        break;\n      case GET_ALL_POST_SUCCESS:\n        draft.posts = action.data.data\n        break;\n      case GET_ALL_POST_FAIELD:\n        console.log(action.error)\n        break;\n      case DEFAULT_ACTION:\n        draft.start = true;\n        break;\n      default:\n        break;\n    }\n  });\nexport default IndexReducer;\n"]},"metadata":{},"sourceType":"module"}