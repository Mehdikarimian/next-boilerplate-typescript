{"version":3,"file":"static/webpack/static/development/pages/index.js.a5e27e6dedf6c6fcabb0.hot-update.js","sources":["webpack:///./pages/index.tsx","webpack:///./pages/selectors.ts"],"sourcesContent":["import React from 'react';\nimport { getAll } from './actions';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport SelectIndexState from './selectors';\n\ninterface IIndexProps {\n  dispatch: Function,\n}\nclass Index extends React.Component<IIndexProps> {\n  constructor(props: IIndexProps) {\n    super(props);\n  }\n  componentDidMount() {\n    this.props.dispatch(getAll())\n  }\n  public render(): JSX.Element {\n    return (\n      <h2>Hi</h2>\n    )\n  }\n}\n\n\n\nconst mapStateToProps = createStructuredSelector<any, any>({\n  IndexState: SelectIndexState()\n});\n\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    dispatch,\n  };\n}\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n);\n\nexport default compose(withConnect)(Index);\n\n","import { createSelector } from 'reselect';\nimport { IStore } from '../reducers';\nimport { initialState } from './reducer';\n\nconst selectIndexDomain = (state: IStore) => state.index || initialState;\n\nconst makeSelectPosts = () =>\n  createSelector(\n    selectIndexDomain,\n    substate => substate,\n  );\n\nexport default makeSelectPosts;\nexport { selectIndexDomain as selectImprintDomain };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AAAA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AAXA;AACA;AAeA;AACA;AADA;AACA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AAKA;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AAHA;AACA;AAKA;;;;;A","sourceRoot":""}